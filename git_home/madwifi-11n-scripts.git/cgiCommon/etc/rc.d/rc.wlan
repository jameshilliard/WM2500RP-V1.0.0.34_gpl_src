#!/bin/sh
####################################################################
#
# WLAN Initialization script
#
# This script will initialize the wlan modules required for operation
# of the AP hardware.  There are several environmental variables that
# can be set to modify the operation of the AP.  These are set to
# default values (or not used) if not defined.  Parameters are:
#
#  DFS_domainoverride   0=Unitialized (default),
#                       1=FCC Domain (FCC3, US)
#                       2=ETSI Domain (Europe)
#                       3=Japan Domain
#  DFS_usenol           1=Use channel NOL (default)
#  ATH_countrycode      Set Country Code (  Override the use of channel NOL
#                       Override default country code (-1 auto, default)
#                       Use country code 0x1ff for demo channels
#
###################################################################
. /etc/ath/apcfg

###################################################################
## Function to unload all modules
###################################################################

_rmmod()
{
    local loaded=`cat /proc/modules | grep "^$1"`
    [ -n "$loaded" ] && rmmod $1
}

_ath_unload()
{
    _rmmod wlan_scan_ap
    _rmmod wlan_scan_sta
    _rmmod ath_pktlog
    sleep 2
    _rmmod wlan_me
    sleep 2
    _rmmod umac
    sleep 2
    _rmmod ath_dev
    _rmmod hst_tx99
    _rmmod ath_dfs
    _rmmod ath_spectral
    _rmmod ath_rate_atheros
    _rmmod ath_hal
    _rmmod asf
    _rmmod adf
    _rmmod acfg_mod
    _rmmod wlan_ext
}

KVER=`uname -r | cut -f 1 -d '-'`
MODULE_PATH=/lib/modules/$KVER

###################################################################
## The input parameter is either up or down.  We assume that
## if no argument is provided, UP is intended
###################################################################

echo "Args: $#"

_insmod()
{
    local mod=$1
    shift
    local params=$@
    [ -f "$mod" ] && insmod $mod $params
}

# If the $1 is a exceptional country id, return false, else return true
country_unexception()
{
	# CountryID exception list here:
	#	12 -- Middle East(Algeria/Syria/Yemen)
	#	if else add it at tail.
	local excp_list="12"
	[ -z $1 ] && return 0

	for cc in $excp_list
	do
		[ "$1" = "$cc" ] && return 1
	done

	return 0
}


if [ $1 != down ]; then
    #
    # Determine if the modules are already up.  If so, simply
    # exit without error.
    #

    MODLIST=`lsmod | grep ath_hal`

    if [ "${MODLIST}" != "" ]; then
	rm -f /tmp/.apup
        exit 0
	fi

	#
    # Calculate the parameter values required.  Add the appropriate settings
    # to the strings
    #
    
    DFS_ARGS=""
    if [ "${DFS_domainoverride}" != "" ]; then
        DFS_ARGS="domainoverride=$DFS_domainoverride $DFS_ARGS"
    fi
    if [ "${DFS_usenol}" != "" ]; then
        DFS_ARGS="usenol=$DFS_usenol $DFS_ARGS"
    fi

    SPECTRAL_ARGS="maxholdintvl=5000 nfrssi=1 nobeacons=0"

    [ -f /tmp/mac_addr_2g ] && MAC_ARGS="mac_addr_2g=`cat /tmp/mac_addr_2g` "
    [ -f /tmp/mac_addr_5g ] && MAC_ARGS=${MAC_ARGS}"mac_addr_5g=`cat /tmp/mac_addr_5g`"

#
# Finally, insert the modules
#
    _insmod $MODULE_PATH/wlan_ext.ko
    _insmod $MODULE_PATH/acfg_mod.ko
    _insmod $MODULE_PATH/adf.ko
    _insmod $MODULE_PATH/asf.ko
    _insmod $MODULE_PATH/ath_hal.ko $MAC_ARGS
    _insmod $MODULE_PATH/ath_rate_atheros.ko
    _insmod $MODULE_PATH/ath_spectral.ko $SPECTRAL_ARGS
    if [ -f $MODULE_PATH/ath_dfs.ko ]; then
        #load DFS if A band is supported,default is supported and set AP_NO_A_BAND=1 if not supported
        _insmod $MODULE_PATH/ath_dfs.ko $DFS_ARGS
    fi
    _insmod $MODULE_PATH/hst_tx99.ko
    _insmod $MODULE_PATH/ath_dev.ko $QOS_ARGS
    _insmod $MODULE_PATH/umac.ko
    _insmod $MODULE_PATH/wlan_me.ko
    _insmod $MODULE_PATH/ath_pktlog.ko

# Remove the temporary file to notify VAP creation  is successful
   rm -f /tmp/.apup

#
# If Country Code has been specified, it needs to be set here using
# the iwpriv command.  This will be common for all VAPs
#

    if [ "$ATH_countrycode" != "" ]; then
        iwpriv wifi0 setCountryID $ATH_countrycode
		
	##
	## Check the result of this command.  If the country code
	## is invalid, it will return a non-zero result.  We should
	## die a horrible death in this case
	##

	if [ $? != 0 ]; then
		_ath_unload
		exit 255
	fi

        if [ "${AP_STARTMODE}" = "multi" -o "${AP_STARTMODE}" = "dual" -o "${AP_RADIO_ID}" = 1 ]; then  
            for i in $my_vaps;
            do
                ITER_RADIO_ID="AP_RADIO_ID$i"
                eval ITER_RADIO_ID=\$$ITER_RADIO_ID 
         
                if [ "${ITER_RADIO_ID}" = 1 ]; then  
                    iwpriv wifi1 setCountryID $ATH_countrycode

                    if [ $? != 0 ] && country_unexception $ATH_countrycode ; then
                        _ath_unload
                        exit 255
                    fi
                    break
                fi
            done
        fi 

	##
	## Don't check this one.  If the second module is not installed, we will
	## get an error code.  If the country code is invalid, it was invalid for
	## the previous call, so we won't get here anyway
	##

	if [ "x$AP_G_BAND_POWERCTRL" != "x" ]; then
	    iwpriv wifi0 TXPowLim2G $AP_G_BAND_POWERCTRL
	fi
	if [ "x$AP_A_BAND_POWERCTRL" != "x" ]; then
	    iwpriv wifi1 TXPowLim5G $AP_A_BAND_POWERCTRL
	fi
	if [ "x$AP_G_BAND_TPSCALE" != "x" ]; then
	    iwpriv wifi0 tpscale $AP_G_BAND_TPSCALE
	fi
	if [ "x$AP_A_BAND_TPSCALE" != "x" ]; then
	    iwpriv wifi1 tpscale $AP_A_BAND_TPSCALE
	fi
    fi

    if [ "${LAN_WLAN_FLOWCONTROL:=0}" != "0" ]; then
        iwpriv wifi0 flowmac 1
    fi
    if [ "${LAN_WLAN_FLOWCONTROL_2:=0}" != "0" ]; then
        iwpriv wifi1 flowmac 1
    fi

else
	_ath_unload

fi
