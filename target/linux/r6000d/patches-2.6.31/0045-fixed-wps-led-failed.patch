diff -Nur linux-2.6.31.old//arch/mips/atheros/gpio.c linux-2.6.31/arch/mips/atheros/gpio.c
--- linux-2.6.31.old//arch/mips/atheros/gpio.c	2013-02-20 03:19:31.947209734 -0500
+++ linux-2.6.31/arch/mips/atheros/gpio.c	2013-02-20 10:40:48.977206575 -0500
@@ -56,8 +56,7 @@
 //#define WLAN_2G_LED_GPIO	  1
 //#define WPS_BUTTON_GPIO         2
 //#define WLAN_BUTTON_GPIO        3
-#define WPS_GREEN_LED_GPIO	7
-#define WPS_AMBER_LED_GPIO	9
+#define WPS_LED_GPIO	WLAN_LED_GPIO
 //#define USB_5V_GPIO		13
 
 #define frdbg printk
@@ -623,64 +622,24 @@
 	return count;
 }
 
-typedef enum {
-        LED_STATE_OFF   =       0,
-        LED_STATE_GREEN =       1,
-        LED_STATE_AMBER =       2,
-        LED_STATE_ORANGE =      3,
-        LED_STATE_MAX =         4
-} led_state_e;
-
-static led_state_e gpio_tricolorled = LED_STATE_OFF;
-
 static int gpio_tricolor_led_read (char *page, char **start, off_t off,
                int count, int *eof, void *data)
 {
-	return sprintf (page, "%d\n", gpio_tricolorled);
+	return 0;
 }
 
 static int gpio_tricolor_led_write (struct file *file, const char *buf,
                                         unsigned long count, void *data)
 {
-	u_int32_t val, green_led_onoff = 0, amber_led_onoff = 0;
+	u_int32_t val;
 	
 	if (sscanf(buf, "%d", &val) != 1)
 	    return -EINVAL;
 	
-	if(val == SIMPLE_CONFIG_BLINK){
-	    if( ath_gpio_in_val(WPS_LED_GPIO) == 0 ){
-	        initial_led_state = WPS_LED_ON;
-	    }else{ 
-	        initial_led_state = WPS_LED_OFF;
-	    }
-	}
-	if (val >= LED_STATE_MAX)
-	    return -EINVAL;
-	
-	switch (val) {
-	    case LED_STATE_OFF :
-	            green_led_onoff = LED_OFF;   /* both LEDs OFF */
-	            amber_led_onoff = LED_OFF;
-	            break;
-	
-	    case LED_STATE_GREEN:
-	            green_led_onoff = LED_ON;    /* green ON, amber OFF */
-	            amber_led_onoff = LED_OFF;
-	            break;
-	
-	    case LED_STATE_AMBER:
-	            green_led_onoff = LED_OFF;   /* green OFF, amber ON */
-	            amber_led_onoff = LED_ON;
-	            break;
-	
-	    case LED_STATE_ORANGE:
-	            green_led_onoff = LED_ON;    /* both LEDs ON */
-	            amber_led_onoff = LED_ON;
-	            break;
-	}
-
-	ar9380GpioSet(WPS_GREEN_LED_GPIO, green_led_onoff);
-	ar9380GpioSet(WPS_AMBER_LED_GPIO, amber_led_onoff);
+	if(val == 1)
+		ath_gpio_out_val(WPS_LED_GPIO, LED_ON);
+	else
+		ath_gpio_out_val(WPS_LED_GPIO, LED_OFF);
 	
 	return count;
 }
@@ -745,6 +704,10 @@
 static int disable_wps_read (char *page, char **start, off_t off,
                                int count, int *eof, void *data)
 {
+	if(diswps)
+		printk("wps is disabled\n");
+	else
+		printk("wps is enabled\n");
         return 0;
 }
 
@@ -962,14 +925,14 @@
                 return;
 
         if (onoff) {
-                ar9380GpioSet(WPS_GREEN_LED_GPIO, LED_OFF);
+                ath_gpio_out_val(WPS_LED_GPIO, LED_OFF);
         } else {
-                ar9380GpioSet(WPS_GREEN_LED_GPIO, LED_ON);
+                ath_gpio_out_val(WPS_LED_GPIO, LED_ON);
         }
         onoff = 1 - onoff;
         diswps_blink_count--;
         if (diswps_blink_count == 0) {
-                ar9380GpioSet(WPS_GREEN_LED_GPIO, LED_ON);
+                ath_gpio_out_val(WPS_LED_GPIO, LED_ON);
         }
         OS_SET_TIMER(&os_diswps_t, WPS_LED_ERR_INTERVAL);
 }
@@ -1317,9 +1280,8 @@
 	ath_gpio_config_output(WAN_GREEN_LED_GPIO);
 	ath_gpio_config_output(POWER_LED_GPIO);
 	ath_gpio_config_output(WLAN_LED_GPIO);
-	ar9380GpioCfgOutput(WPS_AMBER_LED_GPIO);
 	//ar9380GpioCfgOutput(WLAN_2G_LED_GPIO);
-	ar9380GpioCfgOutput(WPS_GREEN_LED_GPIO);
+	ath_gpio_config_output(WPS_LED_GPIO);
 	//ar9380GpioCfgOutput(WLAN_5G_LED_GPIO);
 	ath_gpio_config_output(USB_5V_GPIO);
 
@@ -1336,9 +1298,8 @@
 	ath_gpio_out_val(POWER_LED_GPIO, LED_OFF);
 	ath_gpio_out_val(WLAN_LED_GPIO, LED_OFF);
 	//ar9380GpioSet(WLAN_5G_LED_GPIO, LED_OFF);
-	ar9380GpioSet(WPS_AMBER_LED_GPIO, LED_OFF);
 	//ar9380GpioSet(WLAN_2G_LED_GPIO, LED_OFF);
-	ar9380GpioSet(WPS_GREEN_LED_GPIO, LED_OFF);
+	ath_gpio_out_val(WPS_LED_GPIO, LED_OFF);
 
 #ifdef POWER_ON_RLED_GPIO
 	power_on_proc_entry = create_proc_entry("power_on_finish", 0644,
