diff -Nrup linux-2.6.31.orig//include/linux/netfilter/nf_conntrack_common.h linux-2.6.31/include/linux/netfilter/nf_conntrack_common.h
--- linux-2.6.31.orig//include/linux/netfilter/nf_conntrack_common.h	2013-01-22 03:19:51.465221745 -0500
+++ linux-2.6.31/include/linux/netfilter/nf_conntrack_common.h	2013-01-22 03:22:34.015221715 -0500
@@ -118,6 +118,46 @@ enum ip_conntrack_status {
 	/* Refresh the idle time of ALG data session's master conntrack */
 	IPS_ALG_REFRESH_BIT = 21,
 	IPS_ALG_REFRESH = (1 << IPS_ALG_REFRESH_BIT),
+
+#ifdef CONFIG_ATHRS_HW_NAT
+
+        /* Marked when a ct/nat help owns this pkt */
+        IPS_NAT_ALG_PKT_BIT = 11,
+        IPS_NAT_ALG_PKT = (1 << IPS_NAT_ALG_PKT_BIT),
+
+        /* Marked when the tuple is added to the h/w nat */
+        IPS_ATHR_HW_NAT_ADDED_BIT = 12,
+        IPS_ATHR_HW_NAT_ADDED = (1 << IPS_ATHR_HW_NAT_ADDED_BIT),
+
+        /* Marked when the tuple is added to the h/w nat for a UDP pkt*/
+        IPS_ATHR_HW_NAT_IS_UDP_BIT = 13,
+        IPS_ATHR_HW_NAT_IS_UDP = (1 << IPS_ATHR_HW_NAT_IS_UDP_BIT),
+
+        /* Marked when the tuple is added to the h/w nat for a UDP pkt*/
+        IPS_ATHR_HW_NAT_IS_ONLY_EGRESS_BIT = 14,
+        IPS_ATHR_HW_NAT_IS_ONLY_EGRESS = (1 << IPS_ATHR_HW_NAT_IS_ONLY_EGRESS_BIT),
+
+        /* Marked when the tuple is added to the h/w nat for a UDP pkt*/
+        IPS_ATHR_SW_NAT_SKIPPED_BIT = 15,
+        IPS_ATHR_SW_NAT_SKIPPED = (1 << IPS_ATHR_SW_NAT_SKIPPED_BIT),
+
+        /*
+         * Addded for nat frag table fast hash entry lookup
+         */
+
+	IPS_ATHR_HW_CT_INGRESS_BIT = 16,
+	IPS_ATHR_HW_CT_INGRESS = (1 << IPS_ATHR_HW_CT_INGRESS_BIT),
+
+	IPS_ATHR_HW_CT_EGRESS_BIT = 17,
+	IPS_ATHR_HW_CT_EGRESS = (1 << IPS_ATHR_HW_CT_EGRESS_BIT),
+
+	/*added for hw nat, mark ct when packet go through unsupported layer2 interface*/
+	IPS_ATHR_HW_SRC_NAT_L2NOSUPPORT_BIT = 18,
+	IPS_ATHR_HW_SRC_NAT_L2NOSUPPORT = (1 << IPS_ATHR_HW_SRC_NAT_L2NOSUPPORT_BIT),
+
+	IPS_ATHR_HW_DST_NAT_L2NOSUPPORT_BIT = 19,
+	IPS_ATHR_HW_DST_NAT_L2NOSUPPORT = (1 << IPS_ATHR_HW_DST_NAT_L2NOSUPPORT_BIT),
+#endif
 };
 
 #ifdef __KERNEL__
diff -Nrup linux-2.6.31.orig//net/ipv4/netfilter/nf_nat_core.c linux-2.6.31/net/ipv4/netfilter/nf_nat_core.c
--- linux-2.6.31.orig//net/ipv4/netfilter/nf_nat_core.c	2013-01-22 03:19:51.515221744 -0500
+++ linux-2.6.31/net/ipv4/netfilter/nf_nat_core.c	2013-01-22 03:27:35.855221714 -0500
@@ -385,6 +385,10 @@ nf_nat_setup_info(struct nf_conn *ct,
 	int have_to_hash = !(ct->status & IPS_NAT_DONE_MASK);
 	int have_to_hash_modified = (ct->status & IPS_SNATP2P_MASK) && !(ct->status & IPS_SNATP2P_DONE_MASK);
 
+#ifdef CONFIG_ATHRS_HW_NAT
+        void (*athr_ct_alter_port)(struct nf_conntrack_tuple,
+                                   struct nf_conntrack_tuple, struct nf_conn *);
+#endif
 	/* nat helper or nfctnetlink also setup binding */
 	nat = nfct_nat(ct);
 	if (!nat) {
@@ -416,6 +420,13 @@ nf_nat_setup_info(struct nf_conn *ct,
 		nf_ct_invert_tuplepr(&reply, &new_tuple);
 		nf_conntrack_alter_reply(ct, &reply);
 
+#ifdef CONFIG_ATHRS_HW_NAT
+                if (athr_nat_sw_ops) {
+                        athr_ct_alter_port = rcu_dereference(athr_nat_sw_ops->nf_alter_port);
+                        if (athr_ct_alter_port)
+                                athr_ct_alter_port(curr_tuple, new_tuple, ct);
+                }
+#endif
 		/* Non-atomic: we own this at the moment. */
 		if (maniptype == IP_NAT_MANIP_SRC)
 			ct->status |= IPS_SRC_NAT;
