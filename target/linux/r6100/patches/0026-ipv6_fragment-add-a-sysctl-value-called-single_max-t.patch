From 35e78ac5fff46e88b4c7400b6a26a8b2811418ab Mon Sep 17 00:00:00 2001
From: guoxing.yang <guoxing.yang@dniserver.dnish.net>
Date: Wed, 11 May 2011 15:20:34 +0800
Subject: [PATCH 026/137] ipv6_fragment: add a sysctl value called single_max to netns_frags struct

Add a sysctl value called single_max to netns_frags struct for
controlling the max of single udp packet.

Default set it to 0, when net->ipv6.frags.single_max <= 0, kernel
process as normal.

When net->ipv6.frags.single_max > 0 (eq: 10, 20, or Netgear defined 32),
kernel process as Netgear SPEC's request.

Sysctl /proc/sys/net/ipv6/ip6frag_single_max proc entry to change
net->ipv6.frags.single_max value.

DNI Common Module Patch Review Checklist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here are some basic things that I (Jonathan Chang) have checked
in order to ensure the quality of common modules.

1: The syntax and comment are compliant.

2: No memory leak.
   * memory allocated by malloc() will be freed
   * memory allocated by calloc() will be freed

3: No deadlock such as
   * No function call deadlock.
   * No semaphore deadlock.
   * No tag or label deadlock.

4: No stack overflow caused by
   * infinite recursion
   * too large local array variables

5: coding completeness, such as
   * conditions completeness
   * functions completeness
   * update completeness
   * memory resources completeness
   * sessions resources completeness
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Signed-off-by: guoxing.yang <guoxing.yang@dniserver.dnish.net>
Signed-off-by: Jonathan Chang <jonathan@dniserver.dnish.net>
---
 include/net/inet_frag.h |    1 +
 net/ipv6/reassembly.c   |    2 ++
 2 files changed, 3 insertions(+), 0 deletions(-)

diff --git a/include/net/inet_frag.h b/include/net/inet_frag.h
index 39f2dc9..861f8b1 100644
--- a/include/net/inet_frag.h
+++ b/include/net/inet_frag.h
@@ -10,6 +10,7 @@ struct netns_frags {
 	int			timeout;
 	int			high_thresh;
 	int			low_thresh;
+	int			single_max;
 };
 
 struct inet_frag_queue {
diff --git a/net/ipv6/reassembly.c b/net/ipv6/reassembly.c
index b5fff4b..93bf6a8 100644
--- a/net/ipv6/reassembly.c
+++ b/net/ipv6/reassembly.c
@@ -691,6 +691,7 @@ static int ip6_frags_ns_sysctl_register(struct net *net)
 		table[0].data = &net->ipv6.frags.high_thresh;
 		table[1].data = &net->ipv6.frags.low_thresh;
 		table[2].data = &net->ipv6.frags.timeout;
+		table[3].data = &net->ipv6.frags.single_max;
 	}
 
 	hdr = register_net_sysctl_table(net, net_ipv6_ctl_path, table);
@@ -754,6 +755,7 @@ static int ipv6_frags_init_net(struct net *net)
 	net->ipv6.frags.high_thresh = 256 * 1024;
 	net->ipv6.frags.low_thresh = 192 * 1024;
 	net->ipv6.frags.timeout = IPV6_FRAG_TIMEOUT;
+	net->ipv6.frags.single_max = 0;
 
 	inet_frags_init_net(&net->ipv6.frags);
 
-- 
1.7.4.1

