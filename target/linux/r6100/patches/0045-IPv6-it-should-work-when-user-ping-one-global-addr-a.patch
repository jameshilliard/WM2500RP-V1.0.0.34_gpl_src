From 1f6985d2f5bc09396d2df1770ee98065a22565b9 Mon Sep 17 00:00:00 2001
From: Jingying Lin <jingying.lin@dniserver.dnish.net>
Date: Fri, 1 Jul 2011 09:55:34 +0800
Subject: [PATCH 045/137] IPv6: it should work when user ping one global addr and point the interface

example:
ping6 -I br0 2001::1

the icmp package should be sent out from "br0";

DNI Common Module Patch Review Checklist
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here are some basic things that I (Jonathan Chang) have checked
in order to ensure the quality of common modules.

1: The syntax and comment are compliant.

2: No memory leak.
   * memory allocated by malloc() will be freed
   * memory allocated by calloc() will be freed

3: No deadlock such as
   * No function call deadlock.
   * No semaphore deadlock.
   * No tag or label deadlock.

4: No stack overflow caused by
   * infinite recursion
   * too large local array variables

5: coding completeness, such as
   * conditions completeness
   * functions completeness
   * update completeness
   * memory resources completeness
   * sessions resources completeness
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Signed-off-by: Jingying Lin <jingying.lin@dniserver.dnish.net>
Signed-off-by: Jonathan Chang <jonathan@dniserver.dnish.net>
---
 net/ipv6/raw.c |   13 +++++++++----
 1 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/net/ipv6/raw.c b/net/ipv6/raw.c
index 0ca1e28..9cdb68d 100644
--- a/net/ipv6/raw.c
+++ b/net/ipv6/raw.c
@@ -792,10 +792,15 @@ static int rawv6_sendmsg(struct kiocb *iocb, struct sock *sk,
 		    ipv6_addr_equal(daddr, &np->daddr))
 			daddr = &np->daddr;
 
-		if (addr_len >= sizeof(struct sockaddr_in6) &&
-		    sin6->sin6_scope_id &&
-		    ipv6_addr_type(daddr)&IPV6_ADDR_LINKLOCAL)
-			fl.oif = sin6->sin6_scope_id;
+		if (sysctl_ipv6_ping6_interface) {
+			if (addr_len >= sizeof(struct sockaddr_in6) && sin6->sin6_scope_id)
+				fl.oif = sin6->sin6_scope_id;
+		} else {
+			if (addr_len >= sizeof(struct sockaddr_in6) &&
+			    sin6->sin6_scope_id &&
+			    ipv6_addr_type(daddr)&IPV6_ADDR_LINKLOCAL)
+				fl.oif = sin6->sin6_scope_id;
+		}
 	} else {
 		if (sk->sk_state != TCP_ESTABLISHED)
 			return -EDESTADDRREQ;
-- 
1.7.4.1

