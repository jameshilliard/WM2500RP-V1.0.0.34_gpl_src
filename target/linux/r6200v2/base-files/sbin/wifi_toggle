#!/bin/sh
DNICONFIG=/bin/config
wlg_exist=on
wla_exist=on
update_config()
{
    local val
    case "$1" in
        on)
            val=1;
            ;;
        *)
            val=0;
            ;;
    esac

    config set endis_wl_radio=$val
    if [ $NUM_RADIO -eq 2 ]; then
        config set endis_wla_radio=$val
    fi
    config commit
}

WIFI_TOGGLE_LOCK_FILE=/tmp/.wifi_toggle_lock
if [ "$wlg_exist" = "on" -a "$wla_exist" = "on" ]; then
    NUM_RADIO=2
else
    NUM_RADIO=1
fi
MAX_VAP=8

if [ -f $WIFI_TOGGLE_LOCK_FILE ]; then
    # Just exit if previous wifi toggle is not done.
    exit
fi
touch $WIFI_TOGGLE_LOCK_FILE

current_hw_btn_state=`$DNICONFIG get wl_hw_btn_state`
if [ "$current_hw_btn_state" = "off" ]; then
    NEXT_STATE="on"
else
    NEXT_STATE="off"
fi

echo "Turn Radio to $NEXT_STATE"

# wps led should be turn on if security is not none and wireless is switch on
[ "$wlg_exist" = "on" ] && G_SECURITY_TYPE=`/bin/config get wl_sectype`
[ "$wla_exist" = "on" ] && A_SECURITY_TYPE=`/bin/config get wla_sectype`
#update_config $NEXT_STATE
# according to the new spec, no need to update endis_wl_radio or endis_wla_radio, but to update wl_hw_btn_state
$DNICONFIG set wl_hw_btn_state=$NEXT_STATE
if [ "$NEXT_STATE" = "on" ]; then
    wlan up
    # because WPS and WLAN use the same led, so if status is on, WPS/WLAN led is on, need not to judge WPS led status since it has handled in wlan script
    if [ -f /tmp/aplist0 -o -f /tmp/aplist1 ]; then
        # remove masked interface
        sed -i 's/^#//g' /tmp/topology.conf
        hostapd /var/run/topology.conf &
    fi
    if [ "$wlg_exist" = "on" ]; then
        cat /proc/uptime | sed 's/ .*//' > /tmp/WLAN_uptime
    fi
    if [ "$wla_exist" = "on" ]; then
        cat /proc/uptime | sed 's/ .*//' > /tmp/WLAN_uptime_5G
    fi
else
    wlan down 

    test -f /var/run/wps_led.pid && {
        kill $(cat /var/run/wps_led.pid)
        /sbin/ledcontrol -n wps -c green -s off
        rm -f /var/run/wps_led.pid
    }
    pidlist=`ps | grep 'hostapd' | cut -b1-5`
    for j in $pidlist
    do
        kill -9 $j
    done
    rm -f /tmp/WLAN_uptime*
fi


rm $WIFI_TOGGLE_LOCK_FILE
