#!/bin/sh /etc/rc.common
START=20

print_dhcpd_conf(){
    cat <<EOF
pidfile /var/run/udhcpd.pid
start $2
end $3
interface $1
remaining yes
auto_time 5
lease_file /tmp/udhcpd.leases
option subnet $4
option router $5
option dns $5
option lease $6
EOF
}
 
start_dhcpd() {
    [ ! -f /tmp/udhcpd.leases ] && touch /tmp/udhcpd.leases
    print_dhcpd_conf "$BR_IF" "$($CONFIG get dhcp_start)" "$($CONFIG get dhcp_end)" "$($CONFIG get lan_netmask)" "$($CONFIG get lan_ipaddr)" "$($CONFIG get lan_lease)" > /tmp/udhcpd.conf

    count=1
    while :
    do
	lease="$($CONFIG get reservation$count)"
	if [ "x$lease" = "x" ]; then
	    break;
	fi
	count=`expr $count + 1`
	echo "static_lease $lease" >> /tmp/udhcpd.conf
    done

    udhcpd /tmp/udhcpd.conf
}

start() {
	local lan_ip lan_mask

	# set iptv interface
	gui_region=$($CONFIG get GUI_Region)
	firmware_region=`cat /firmware_region | awk '{print $1}'`
	if [ "$firmware_region" = "" ] || [ "$firmware_region" = "WW" ];then
	        if [ "$gui_region" = "Russian" ] || [ "$gui_region" = "Chinese" ];then
	                vlan-set $($CONFIG get iptv_mask) 1>/tmp/vlan-set-result
	        else
	                vlan-set 0 1>/tmp/vlan-set-result
	        fi
	elif [ "$firmware_region" = "RU" ] || [ "$firmware_region" = "PR" ];then
	        vlan-set $($CONFIG get iptv_mask) 1>/tmp/vlan-set-result
	else
	        vlan-set 0 1>/tmp/vlan-set-result
	fi


	lan_ip=$($CONFIG get lan_ipaddr)
	lan_mask=$($CONFIG get lan_netmask)

	ifconfig $BR_IF ${lan_ip:-192.168.1.1} netmask ${lan_mask:-255.255.255.0}
	
	ifconfig $LAN_IF up

	ifconfig $BR_IF down
	# Enable DAD, and randomly generate anoter link-local address if
	# MAC-based duplicate link-local address has been found.
	echo 3 > /proc/sys/net/ipv6/conf/default/accept_dad
	echo 3 > /proc/sys/net/ipv6/conf/${BR_IF}/accept_dad
	sleep 2
	ifconfig $BR_IF up

	if [ "$($CONFIG get lan_dhcp)" = "1" ]; then
		if [ "$($CONFIG get wds_endis_fun)" = "0" -a "$($CONFIG get wla_wds_endis_fun)" = "0" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "0" -a "$($CONFIG get wla_wds_endis_fun)" = "1" -a "$($CONFIG get wds_repeater_basic_a)" = "1" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "1" -a "$($CONFIG get wla_wds_endis_fun)" = "0" -a "$($CONFIG get wds_repeater_basic)" = "1" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "1" -a "$($CONFIG get wla_wds_endis_fun)" = "1" ]; then
			if [ "$($CONFIG get wds_repeater_basic_a)" = "1" -a "$($CONFIG get wds_repeater_basic)" = "1" ]; then
				start_dhcpd
			fi
		fi
	fi

	# Attach Device
	mkdir -p /tmp/netscan
	/usr/sbin/net-scan

	# Restart UPnP
	/sbin/cmdupnp restart

	# Start Router Debugging Mode ...
	. /lib/network/RtDebug.sh
	start_RtDebugMode

	# Tell smbd that LAN's IP MAY be changed.
	/usr/bin/killall smbd 2> /dev/null
	/usr/sbin/update_smb

	# Apply static route	
	/sbin/cmdroute start

	# Update the hostname
	echo "$($CONFIG get netbiosname)" > /proc/sys/kernel/hostname
}

stop() {
	killall udhcpd
	killall net-scan
	ifdown $LAN_IF	

	# PHY link will be pulled low some seconds to force transition to reboot state 
	# and generating DHCP request and Discovery protocol and address refresh in the 
	# devices connected to the NETGEAR Local Area Network ports.
	echo -n 9 > /proc/switch_phy
}

restart() {
	stop
	start
}
